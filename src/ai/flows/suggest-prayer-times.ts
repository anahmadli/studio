// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow to suggest prayer time calculation methods based on the user's location.
 *
 * - suggestPrayerTimes - A function that handles the suggestion of prayer time calculation methods.
 * - SuggestPrayerTimesInput - The input type for the suggestPrayerTimes function.
 * - SuggestPrayerTimesOutput - The return type for the suggestPrayerTimes function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPrayerTimesInputSchema = z.object({
  latitude: z
    .number()
    .describe('The latitude of the user.')
,
  longitude: z
    .number()
    .describe('The longitude of the user.')
,
});
export type SuggestPrayerTimesInput = z.infer<typeof SuggestPrayerTimesInputSchema>;

const SuggestPrayerTimesOutputSchema = z.object({
  suggestedMethods: z.array(z.string()).describe('An array of suggested prayer time calculation methods commonly used in the user\u2019s region.'),
});
export type SuggestPrayerTimesOutput = z.infer<typeof SuggestPrayerTimesOutputSchema>;

export async function suggestPrayerTimes(input: SuggestPrayerTimesInput): Promise<SuggestPrayerTimesOutput> {
  return suggestPrayerTimesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestPrayerTimesPrompt',
  input: {schema: SuggestPrayerTimesInputSchema},
  output: {schema: SuggestPrayerTimesOutputSchema},
  prompt: `You are an expert in Islamic prayer times.

Based on the user's location, suggest prayer time calculation methods that are commonly used in their region.

Latitude: {{{latitude}}}
Longitude: {{{longitude}}}

Suggest at least 3 methods.

Output as a JSON array of strings.`,
});

const suggestPrayerTimesFlow = ai.defineFlow(
  {
    name: 'suggestPrayerTimesFlow',
    inputSchema: SuggestPrayerTimesInputSchema,
    outputSchema: SuggestPrayerTimesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
